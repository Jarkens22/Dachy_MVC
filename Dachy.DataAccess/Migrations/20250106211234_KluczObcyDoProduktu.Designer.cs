// <auto-generated />
using Dachy.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dachy.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250106211234_KluczObcyDoProduktu")]
    partial class KluczObcyDoProduktu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dachy.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DisplayOrder = 1,
                            Name = "Pokrycia stalowe"
                        },
                        new
                        {
                            CategoryId = 2,
                            DisplayOrder = 2,
                            Name = "Dachówki ceramiczne"
                        },
                        new
                        {
                            CategoryId = 3,
                            DisplayOrder = 3,
                            Name = "Dachówki cementowe"
                        },
                        new
                        {
                            CategoryId = 4,
                            DisplayOrder = 4,
                            Name = "Systemy rynnowe"
                        },
                        new
                        {
                            CategoryId = 5,
                            DisplayOrder = 5,
                            Name = "Akcesoria"
                        });
                });

            modelBuilder.Entity("Dachy.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price300")
                        .HasColumnType("float");

                    b.Property<double>("Price500")
                        .HasColumnType("float");

                    b.Property<string>("Producent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Frigge to nowoczesny i estetyczny dach na każdą kieszeń. Prosta, ciekawa forma oraz szeroki wybór powłok i kolorów blachodachówki modułowej Ruukki Frigge – to cechy, które pozwolą spełnić oczekiwania każdego Klienta.",
                            ListPrice = 55.0,
                            Name = "Frigge",
                            Price100 = 52.0,
                            Price300 = 49.0,
                            Price500 = 46.0,
                            Producent = "Ruukki"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Wolność i swoboda w działaniu - to Como! Dopasuj powierzchnię dachu do własnego gustu i wybierz wersję standardową bądź z dodatkowym przetłoczeniem - mikrofalą.",
                            ListPrice = 60.0,
                            Name = "Como",
                            Price100 = 57.0,
                            Price300 = 54.0,
                            Price500 = 51.0,
                            Producent = "BudMat"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Pierwsza w rodzinie. Od niej wszystko się zaczęło. To efekt pracy nad najlepszym dachem modułowym w Polsce i w Europie. 5 dolnych fal i 6 wierzchołków sprawiają, że Venecja podkreśla urodę klasycznych budynków.",
                            ListPrice = 66.0,
                            Name = "Venecja",
                            Price100 = 62.0,
                            Price300 = 59.0,
                            Price500 = 56.0,
                            Producent = "BudMat"
                        });
                });

            modelBuilder.Entity("Dachy.Models.Product", b =>
                {
                    b.HasOne("Dachy.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
